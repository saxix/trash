# ref: https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action
name: 'Check if image with valid checksum exists in dockerhub'
description: 'WARNING: Only works for single platform images'
inputs:
  image:
    description: 'Docker Image '
    required: true
  checksum:
    description: 'checksum'
    required: true
  label:
    description: 'checksum label'
    default: 'checksum'
    required: false
  username:
    description: 'DockerHub username '
    required: false
  password:
    description: 'DockerHub password '
    required: false
  architecture:
    description: 'DockerHub architecture to build '
    required: false
    default: amd64

outputs:
  exists:
    description: 'Returns true if the image exists and the checksum is valid'
    value: ${{ steps.check.outputs.exists }}

runs:
  using: 'composite'
  steps:
    - name: Check Image Updated
      id: check
      continue-on-error: true
      shell: bash --noprofile --norc -eo pipefail -ux {0}
      run: |
        trap 'echo "exitcode=$?" >> "$GITHUB_OUTPUT"' EXIT
        
        ref=${{ inputs.image }}
        architecture=${{ inputs.architecture }}
        repo="${ref%:*}"
        tag="${ref##*:}"
        
        echo $repo:$tag
        
        res=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${repo}:pull")
        token=$(echo $res | jq -r '.token')
        
        if [[ -z "$token" ]];then
          echo "Unable to get Auth Token"
          echo $res
          exit 1
        fi
        
        manifest=$(curl -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
                      -H "Authorization: Bearer $token" \
                      -s "https://registry-1.docker.io/v2/${repo}/manifests/${tag}")
        
        if [[ -z "$manifest" ]];then
          echo "Unable to get manifest "
          exit 1
        fi
        check=$(echo $manifest | jq 'try(.manifests[])')
        
        if [[ -n "$check" ]]; then
          echo "Multi platform manifest detected "
          digest=$(echo $manifest | jq -r ".manifests| map(select(.platform.architecture | contains (\"${architecture}\"))) | .[].digest" 2>&1)
        else
          echo "Single platform manifest found "
          digest=$(echo $manifest | jq -r '.config.digest' 2>&1)
        fi
        
        if [[ -z "$digest" ]];then
          echo "Unable to get digest "
          echo $manifest | jq
          exit 1
        fi
        
        blob=$(curl \
              --silent \
              --location \
              --header "Accept: application/vnd.docker.distribution.manifest.v2+json" \
              --header "Authorization: Bearer $token" \
              "https://registry-1.docker.io/v2/$repo/blobs/$digest")
        
        if [[ -z "$blob" ]]; then
          echo "Unable to get blob from: https://registry-1.docker.io/v2/$repo/blobs/$digest"
          exit 1
        fi
        checksum=$(echo $blob | jq '.config.Labels.checksum')
        ret='???'
        if [[ $checksum == null ]]; then
          echo "Invalid Blob from: https://registry-1.docker.io/v2/$repo/blobs/$digest"
          ret=false
        else
          ret=true
        fi
        echo "exists=${ret}" >> "$GITHUB_OUTPUT"
    - name: Check Image Updatedset results
      shell: bash --noprofile --norc -eo pipefail -ux {0}
      run: |
        echo 2222, ${{ steps.check.outputs.exitcode }}
