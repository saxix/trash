name: 'version'
description: ''

outputs:
  stage:
    description: 'The time we greeted you'
    value: ${{ steps.parser.outputs.stage }}
  version:
    description: 'The time we greeted you'
    value: ${{ steps.parser.outputs.version }}


runs:
  using: 'composite'
  steps:
#    - name: Configure Git
#      shell: bash --noprofile --norc -eo pipefail -ux {0}
#      run: |
#        echo "22222222222"
#        git config --global --add safe.directory $(realpath .)
    - name: ch
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Parse branch
      shell: bash --noprofile --norc -eo pipefail -ux {0}
      id: parser
      run: |
        BASE=$(git describe --all --exact-match 2>/dev/null | sed 's=.*/==')
        VERSION="${BASE#[vV]}"
        VERSION_MAJOR="${VERSION%%.*}"
        VERSION_MINOR_PATCH="${VERSION#*.}"
        VERSION_MINOR="${VERSION_MINOR_PATCH%%.*}"
        VERSION_PATCH_PRE_RELEASE="${VERSION_MINOR_PATCH#*.}"
        VERSION_PATCH="${VERSION_PATCH_PRE_RELEASE%%[-+]*}"
        VERSION_PRE_RELEASE=""
        
        case "$VERSION" in
          *rc)
            VERSION_PRE_RELEASE="${VERSION#rc}"
            VERSION_PRE_RELEASE="${VERSION_PRE_RELEASE%%+*}"
            ;;
          *-*)
            VERSION_PRE_RELEASE="${VERSION#*-}"
            VERSION_PRE_RELEASE="${VERSION_PRE_RELEASE%%+*}"
            ;;
        esac
        
        if [[ ${{github.ref_name}} == develop ]]; then
          stage=a
          version=${GITHUB_SHA::7}
        elif [[ ${{github.ref_name}} == master ]]; then
          stage=final
          version=11111
        elif [[ ${{github.ref_name}} == releases/* ]]; then
          stage=rc
          version=${GITHUB_SHA::7}
        elif [[ ${{github.ref_name}} == tags/* ]]; then
          stage=final
          version=${GITHUB_SHA::7}
        else
          stage=a
          version=${GITHUB_SHA::7}
        fi
        
        echo "========"
        echo $VERSION
        echo "========"

#        echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
#        echo "stage=rc" >> $GITHUB_OUTPUT
#        echo "version=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

#    - name: Describe
#      id: describe
#      shell: bash --noprofile --norc -eo pipefail -ux {0}
#      run: |
#        echo ${{ steps.branch.version }}
#        ver=$(`git symbolic-ref HEAD 2> /dev/null | cut -b 12-`-`git log --pretty=format:"%h" -1`)
#        echo "version=$ver" >> $GITHUB_OUTPUT
